{"ast":null,"code":"var _jsxFileName = \"K:\\\\project-x\\\\EcoTrack\\\\frontend\\\\src\\\\components\\\\AirQualityMap.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet';\n\n// Fix for default marker icons\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png')\n});\nconst AirQualityMap = () => {\n  _s();\n  const [locations, setLocations] = useState([]);\n  useEffect(() => {\n    // Fetch air quality data from OpenAQ API\n    axios.get('https://api.openaq.org/v1/latest', {\n      params: {\n        limit: 100,\n        parameter: 'pm25'\n      }\n    }).then(response => setLocations(response.data.results)).catch(error => console.error('Error fetching air quality data:', error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [20, 0],\n    zoom: 2,\n    style: {\n      height: '500px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), locations.map((location, index) => /*#__PURE__*/_jsxDEV(Marker, {\n      position: [location.coordinates.latitude, location.coordinates.longitude],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: location.location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), \"PM2.5: \", location.measurements[0].value, \" \\xB5g/m\\xB3\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(AirQualityMap, \"MB6FmaD0YN2j72DuSocJeRR7/38=\");\n_c = AirQualityMap;\nexport default AirQualityMap;\nvar _c;\n$RefreshReg$(_c, \"AirQualityMap\");","map":{"version":3,"names":["axios","L","React","useEffect","useState","MapContainer","Marker","Popup","TileLayer","jsxDEV","_jsxDEV","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","AirQualityMap","_s","locations","setLocations","get","params","limit","parameter","then","response","data","results","catch","error","console","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","map","location","index","position","coordinates","latitude","longitude","measurements","value","_c","$RefreshReg$"],"sources":["K:/project-x/EcoTrack/frontend/src/components/AirQualityMap.js"],"sourcesContent":["import axios from 'axios';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, Marker, Popup, TileLayer } from 'react-leaflet';\n\n// Fix for default marker icons\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\n  iconUrl: require('leaflet/dist/images/marker-icon.png'),\n  shadowUrl: require('leaflet/dist/images/marker-shadow.png'),\n});\n\nconst AirQualityMap = () => {\n  const [locations, setLocations] = useState([]);\n\n  useEffect(() => {\n    // Fetch air quality data from OpenAQ API\n    axios.get('https://api.openaq.org/v1/latest', {\n      params: {\n        limit: 100,\n        parameter: 'pm25',\n      },\n    })\n      .then(response => setLocations(response.data.results))\n      .catch(error => console.error('Error fetching air quality data:', error));\n  }, []);\n\n  return (\n    <MapContainer center={[20, 0]} zoom={2} style={{ height: '500px', width: '100%' }}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n      {locations.map((location, index) => (\n        <Marker\n          key={index}\n          position={[location.coordinates.latitude, location.coordinates.longitude]}\n        >\n          <Popup>\n            <strong>{location.location}</strong>\n            <br />\n            PM2.5: {location.measurements[0].value} µg/m³\n          </Popup>\n        </Marker>\n      ))}\n    </MapContainer>\n  );\n};\n\nexport default AirQualityMap;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,SAAS;AACvB,OAAO,0BAA0B;AACjC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,YAAY,EAAEC,MAAM,EAAEC,KAAK,EAAEC,SAAS,QAAQ,eAAe;;AAEtE;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAOT,CAAC,CAACU,IAAI,CAACC,OAAO,CAACC,SAAS,CAACC,WAAW;AAC3Cb,CAAC,CAACU,IAAI,CAACC,OAAO,CAACG,YAAY,CAAC;EAC1BC,aAAa,EAAEC,OAAO,CAAC,wCAAwC,CAAC;EAChEC,OAAO,EAAED,OAAO,CAAC,qCAAqC,CAAC;EACvDE,SAAS,EAAEF,OAAO,CAAC,uCAAuC;AAC5D,CAAC,CAAC;AAEF,MAAMG,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd;IACAH,KAAK,CAACwB,GAAG,CAAC,kCAAkC,EAAE;MAC5CC,MAAM,EAAE;QACNC,KAAK,EAAE,GAAG;QACVC,SAAS,EAAE;MACb;IACF,CAAC,CAAC,CACCC,IAAI,CAACC,QAAQ,IAAIN,YAAY,CAACM,QAAQ,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC,CACrDC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC,CAAC;EAC7E,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA,CAACL,YAAY;IAAC8B,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC,CAAE;IAACC,IAAI,EAAE,CAAE;IAACC,KAAK,EAAE;MAAEC,MAAM,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAChF9B,OAAA,CAACF,SAAS;MACRiC,GAAG,EAAC,oDAAoD;MACxDC,WAAW,EAAC;IAAyF;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtG,CAAC,EACDxB,SAAS,CAACyB,GAAG,CAAC,CAACC,QAAQ,EAAEC,KAAK,kBAC7BvC,OAAA,CAACJ,MAAM;MAEL4C,QAAQ,EAAE,CAACF,QAAQ,CAACG,WAAW,CAACC,QAAQ,EAAEJ,QAAQ,CAACG,WAAW,CAACE,SAAS,CAAE;MAAAb,QAAA,eAE1E9B,OAAA,CAACH,KAAK;QAAAiC,QAAA,gBACJ9B,OAAA;UAAA8B,QAAA,EAASQ,QAAQ,CAACA;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eACpCpC,OAAA;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,WACC,EAACE,QAAQ,CAACM,YAAY,CAAC,CAAC,CAAC,CAACC,KAAK,EAAC,cACzC;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC,GAPHG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQJ,CACT,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEnB,CAAC;AAACzB,EAAA,CAnCID,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}